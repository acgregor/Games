package contents;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.AbstractAction;
import javax.swing.JComboBox;
import javax.swing.KeyStroke;

public class FractalController
{
	private FractalModel model;
	private FractalView view;
	private boolean customBG,customFract;
	
	public FractalController(FractalModel m, FractalView v)
	{
		model=m;
		view=v;
		customBG=false;
		customFract=false;
		view.addBG_Listener((ActionListener)new bgOptionListener());
		view.addFract_Listener((ActionListener)new fractOptionListener());
		view.addNextButtonListener(new nextButtonListener());
	}
	class bgOptionListener implements ActionListener
	{
		@Override
		public void actionPerformed(ActionEvent e) 
		{
			if(((JComboBox)e.getSource()).getSelectedItem()=="Custom")
			{
				view.getBG_Layout().show(view.getBG_CardPanel(), "2");
				customBG=true;
			}
			else
			{
				view.getBG_Layout().show(view.getBG_CardPanel(), "1");
				customBG=false;
				if(((JComboBox)e.getSource()).getSelectedItem()=="Black")
				{
					view.setBG_Color("000000");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="White")
				{
					view.setBG_Color("ffffff");
				}
			}
			
		}
	}
	class fractOptionListener implements ActionListener
	{
		@Override
		public void actionPerformed(ActionEvent e) 
		{
			if(((JComboBox)e.getSource()).getSelectedItem()=="Custom")
			{
				view.getFract_Layout().show(view.getFract_CardPanel(), "2");
				customFract=true;
			}
			else
			{
				view.getFract_Layout().show(view.getFract_CardPanel(), "1");
				customFract=false;
				if(((JComboBox)e.getSource()).getSelectedItem()=="Red")
				{
					view.setFract_Color("ff0000");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="Orange")
				{
					view.setFract_Color("ff7700");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="Yellow")
				{
					view.setFract_Color("ffff00");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="Green")
				{
					view.setFract_Color("00ff00");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="Blue")
				{
					view.setFract_Color("0000ff");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="Purple")
				{
					view.setFract_Color("ff00ff");
				}
				else if(((JComboBox)e.getSource()).getSelectedItem()=="White")
				{
					view.setFract_Color("ffffff");
				}
			}
			
		}
	}
	class nextButtonListener implements ActionListener
	{
		@Override
		public void actionPerformed(ActionEvent e) 
		{
			if(customBG)
			{
				model.checkBackgroundOptions(view.getBG_Text());
				
				if(model.isBackgroundWarnings())
				{
					view.displayBGWarning();
				}
				else
				{
					view.setBG_Color(view.getBG_Text());
				}
			}
			
			if(customFract)
			{
				model.checkFractalOptions(view.getFract_Text());
				if(model.isFractalWarnings())
				{
					view.displayFractWarning();
				}
				else
				{
					view.setFract_Color(view.getFract_Text());
				}
			}
			
			model.checkLineLengthOptions(view.getLineLengthText());
			if(model.isLineLengthWarnings())
			{
				view.displayLineWarning();
			}
			else
			{
				model.setLineLength(Integer.parseInt(view.getLineLengthText()));
			}
			
			if(!model.isBackgroundWarnings() && !model.isFractalWarnings() && !model.isLineLengthWarnings())
			{
				view.showInstructions();
				model.setupArray();
				model.CalculateArray();
				view.setFractArray(model.getArray());
				view.createDrawingPanel();
				view.getDrawingPanel().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,0), "Iterate");
				view.getDrawingPanel().getActionMap().put("Iterate", new AbstractAction()
				{
					@Override
					public void actionPerformed(ActionEvent arg0)
					{
						model.CalculateArray();
						view.setFractArray(model.getArray());
						view.getDrawingPanel().repaint();
					}
				});
			}
			else
			{
				model.resetWarnings();
			}
		}
	}
	class DrawingKeyListener implements KeyListener
	{
		@Override
		public void keyPressed(KeyEvent arg0) {}

		@Override
		public void keyReleased(KeyEvent arg0) {}

		@Override
		public void keyTyped(KeyEvent e) 
		{
			if(e.getKeyCode()==KeyEvent.VK_SPACE)
			{
				//model.CalculateArray();
				//view.setFractArray(model.getArray());
				//view.getDrawingPanel().repaint();
				System.out.println(model.getArray());
			}
		}
		
	}
}
